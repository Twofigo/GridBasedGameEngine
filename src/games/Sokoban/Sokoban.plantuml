@startuml

title __SOKOBAN's Class Diagram__\n

  namespace games.TestGame {
    namespace Sokoban {
      class games.TestGame.Sokoban.Actuate {
          + action()
      }
    }
  }
  

  namespace games.TestGame {
    namespace Sokoban {
      class games.TestGame.Sokoban.Box {
          - active : boolean
          - activeTexture : Image
          - neutralTexure : Image
          + Box()
          + clone()
          + clone()
          + isActive()
          + moveInto()
          + setActive()
          + update()
      }
    }
  }
  

  namespace games.TestGame {
    namespace Sokoban {
      class games.TestGame.Sokoban.Level {
          - playerSpawnX : int
          - playerSpawnY : int
          - victoryCondition : int
          + Level()
          + getPlayerSpawnX()
          + getPlayerSpawnY()
          + getVictoryCondition()
          + setPlayerSpawn()
      }
    }
  }
  

  namespace games.TestGame {
    namespace Sokoban {
      interface games.TestGame.Sokoban.MoveInto {
          {abstract} + moveInto()
      }
    }
  }
  

  namespace games.TestGame {
    namespace Sokoban {
      class games.TestGame.Sokoban.MoveTo {
          + action()
      }
    }
  }
  

  namespace games.TestGame {
    namespace Sokoban {
      class games.TestGame.Sokoban.Plate {
          + Plate()
          + moveInto()
      }
    }
  }
  

  namespace games.TestGame {
    namespace Sokoban {
      class games.TestGame.Sokoban.Player {
          + Player()
          + clone()
          + clone()
          + update()
      }
    }
  }
  

  namespace games.TestGame {
    namespace Sokoban {
      class games.TestGame.Sokoban.Sokoban {
          - currentLevelIndex : int
          - levels : ArrayList<Level>
          - victoryProgress : int
          + Sokoban()
          + changeLevel()
          + createLevel1()
          + createLevel2()
          + createLevel3()
          + keyPressed()
          {static} + main()
          + mouseClicked()
          + mouseDragged()
          + mouseMoved()
          + mousePressed()
          + mouseReleased()
          + mouseWheelMoved()
          + update()
          + updateVictoryProgress()
      }
    }
  }
  

  namespace games.TestGame {
    namespace Sokoban {
      class games.TestGame.Sokoban.Wall {
          + Wall()
          + moveInto()
      }
    }
  }
  

  games.TestGame.Sokoban.Actuate .up.|> engine.Interaction
  games.TestGame.Sokoban.Box .up.|> games.TestGame.Sokoban.MoveInto
  games.TestGame.Sokoban.Box -up-|> engine.Entity
  games.TestGame.Sokoban.Level -up-|> engine.BasicTableTop
  games.TestGame.Sokoban.MoveTo .up.|> engine.Interaction
  games.TestGame.Sokoban.Plate .up.|> games.TestGame.Sokoban.MoveInto
  games.TestGame.Sokoban.Plate -up-|> engine.Tile
  games.TestGame.Sokoban.Player -up-|> engine.Entity
  games.TestGame.Sokoban.Sokoban -up-|> engine.PuppetMaster
  games.TestGame.Sokoban.Sokoban o-- games.TestGame.Sokoban.Actuate : ACTUATE
  games.TestGame.Sokoban.Sokoban o-- games.TestGame.Sokoban.MoveTo : MOVETO
  games.TestGame.Sokoban.Sokoban o-- engine.Graphics.BoardView : bv
  games.TestGame.Sokoban.Sokoban o-- games.TestGame.Sokoban.Player : p
  games.TestGame.Sokoban.Wall .up.|> games.TestGame.Sokoban.MoveInto
  games.TestGame.Sokoban.Wall -up-|> engine.Tile


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
